/**
 * hook 对象
 * @since 0.3.5
 */
interface IHookObj {
    /**
     * 实例名
     */
    instance: string;
    /**
     * 方法名
     */
    method: string;
    /**
     * 参数数组
     */
    params?: Array<any>;
}
/**
 * 启动后执行钩子对象管理器
 * @since 0.3.5
 */
export declare class LaunchHookManager {
    /**
     * hook实例数组
     */
    static hooks: Array<IHookObj>;
    /**
     * 初始化
     * @param json [{"instance":实例名,"method":方法名,params:参数数组}...]
     */
    static init(json: Array<IHookObj>): void;
    /**
     * 批量执行hook方法
     */
    static run(): Promise<void>;
    /**
     * 解析配置文件
     * @param path  launch hook配置文件路径
     */
    static parseFile(path: string): void;
}
export {};
