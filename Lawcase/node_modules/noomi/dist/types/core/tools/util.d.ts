/**
 * 工具类
 * @remarks
 * 提供工具方法
 */
export declare class Util {
    /**
     * 字符串转regexp
     * @param str       待处理字符串
     * @param side      两端匹配 1前端 2后端 3两端
     * @returns         转换后的正则表达式
     */
    static toReg(str: string, side?: number): RegExp;
    /**
     * 获取绝对路径
     * @param pa    待处理的字符串数组
     * @returns     字符串数组构成的的绝对地址
     */
    static getAbsPath(pa: Array<string>): string;
    /**
     * 获取相对路径
     * @param pa    待处理的字符串数组
     * @returns     字符串数组构成的的绝对地址
     */
    static getRelPath(path: string): string;
    /**
     * 编译消息，把${}内容替换为参数
     * @param msg       待编译消息
     * @param param     参数数组
     * @returns         编译后的字符串
     * @since 0.4.8
     */
    static compileString(msg: string, param: Array<any>): string;
    /**
     * 克隆object
     * @param srcObj    源对象
     * @returns         克隆后的对象
     */
    static clone(srcObj: object): any;
}
