import { HttpRequest } from "../../web/httprequest";
import { HttpResponse } from "../../web/httpresponse";
/**
 * 路由基类
 * 可自动为路由类生成model(传入参数对象)，自带request和response对象
 * 建议所有路由继承此基类
 */
declare class BaseRoute {
    /**
     * 模型类
     */
    __modelClass: any;
    /**
     * null属性检查{方法名:待检查属性数组}
     */
    private __nullCheckMap;
    /**
     * 数据对象
     */
    model: any;
    /**
     * request对象
     */
    request: HttpRequest;
    /**
     * response对象
     */
    response: HttpResponse;
    /**
     * 为model设置值
     * @param data  数据对象(由浏览器/客户端传入的数据参数)
     * @returns     无异常null，否则返回异常字段集
     */
    setModel(data: any, nullArr?: Array<string>): object;
    /**
     * 设置request对象
     * @param req   request对象
     */
    setRequest(req: HttpRequest): void;
    /**
     * 设置reponse对象
     * @param res   response对象
     */
    setResponse(res: HttpResponse): void;
    /**
     * 增加nullcheck 方法
     * @param methodName    方法名
     * @param props         检测数组
     */
    __addNullCheck(methodName: string, props: Array<string>): void;
    /**
     * 获取null check 数组
     * @param methodName 方法名
     */
    __getNullCheck(methodName: string): Array<string>;
}
export { BaseRoute };
