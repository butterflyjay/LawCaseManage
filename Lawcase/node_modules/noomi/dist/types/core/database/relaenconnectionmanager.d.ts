import { IConnectionManager } from "./connectionmanager";
/**
 * relaen连接管理器
 * @since 0.4.7
 */
declare class RelaenConnectionManager implements IConnectionManager {
    /**
     * 连接池
     */
    pool: any;
    /**
     * 是否使用连接池
     */
    usePool: boolean;
    /**
     * relaen connection对象
     */
    connection: any;
    /**
     * 数据库配置项，示例如下：
     * ```
     * {
     *    "dialect":"mysql",
     *    "host":"localhost",
     *    "port":3306,
     *    "username":"your user name",
     *    "password":"your password",
     *    "database":"your database",
     *    "pool":{
     *        "min":0,
     *        "max":10
     *    },
     *    "entities": [
     *        "your entity js directory"
     *     ],
     *    "cache":true,
     *    "debug":true
     * }
     * ```
     * 更多细节参考npm relaen
     */
    options: object;
    /**
     * 构造器
     * @param cfg 配置对象 {usePool:使用连接池,useTransaction:是否启用事务机制,其它配置参考options属性说明}
     */
    constructor(cfg: any);
    /**
     * 获取连接
     * @returns relaen connection对象
     */
    getConnection(): Promise<any>;
    /**
     * 获取manager
     * @returns     EntityManager
     */
    getManager(): Promise<any>;
    /**
     * 释放连接，不做任何操作
     * @param conn  连接
     */
    release(conn: any): Promise<void>;
}
export { RelaenConnectionManager };
