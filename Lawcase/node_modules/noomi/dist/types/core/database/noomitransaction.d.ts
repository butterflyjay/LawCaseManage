/**
 * 事务类
 */
declare class NoomiTransaction {
    /**
     * 事务id
     */
    id: number;
    /**
     * 事务所属连接
     */
    connection: any;
    /**
     *
     */
    manager: any;
    /**
     * 事务类型
     */
    type: ETransactionType;
    /**
     * 事务是否开始
     */
    isBegin: boolean;
    /**
     * 事务id数组，当事务嵌套时需要通过该数组判断是否执行commit和rollback
     */
    invokeNum: number;
    /**
     * 实际的事务对象
     */
    tr: any;
    /**
     * 构造器
     * @param id            事务id
     * @param connection    所属连接
     * @param type          事务类型
     */
    constructor(id: number, connection?: any, type?: ETransactionType);
    /**
     * 开始事务,继承类需要重载
     */
    begin(): Promise<void>;
    /**
     * 事务提交,继承类需要重载
     */
    commit(): Promise<void>;
    /**
     * 事务回滚,继承类需要重载
     */
    rollback(): Promise<void>;
}
/**
 * 事务类型枚举
 */
declare enum ETransactionType {
    /**
     * 嵌套
     */
    NESTED = 1,
    /**
     * 新建
     */
    NEW = 2
}
export { NoomiTransaction, ETransactionType };
