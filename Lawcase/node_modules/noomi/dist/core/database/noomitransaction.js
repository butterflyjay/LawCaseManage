"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ETransactionType = exports.NoomiTransaction = void 0;
const connectionmanager_1 = require("./connectionmanager");
/**
 * 事务类
 */
class NoomiTransaction {
    /**
     * 构造器
     * @param id            事务id
     * @param connection    所属连接
     * @param type          事务类型
     */
    constructor(id, connection, type) {
        this.id = id;
        this.connection = connection;
        this.invokeNum = 0;
        this.type = type || ETransactionType.NESTED;
    }
    /**
     * 开始事务,继承类需要重载
     */
    async begin() {
        this.isBegin = true;
        if (!this.connection) {
            await connectionmanager_1.getConnection();
        }
    }
    /**
     * 事务提交,继承类需要重载
     */
    async commit() { }
    /**
     * 事务回滚,继承类需要重载
     */
    async rollback() { }
}
exports.NoomiTransaction = NoomiTransaction;
/**
 * 事务类型枚举
 */
var ETransactionType;
(function (ETransactionType) {
    /**
     * 嵌套
     */
    ETransactionType[ETransactionType["NESTED"] = 1] = "NESTED";
    /**
     * 新建
     */
    ETransactionType[ETransactionType["NEW"] = 2] = "NEW";
})(ETransactionType || (ETransactionType = {}));
exports.ETransactionType = ETransactionType;
/**
 * 事务源枚举类型
 */
var ETransactionSource;
(function (ETransactionSource) {
    /**
     * mysql
     */
    ETransactionSource["MYSQL"] = "mysql";
    /**
     * oracle
     */
    ETransactionSource["ORACLE"] = "oracle";
    /**
     * mssql
     */
    ETransactionSource["MSSQL"] = "mssql";
    /**
     * mongodb
     */
    ETransactionSource["MONGODB"] = "mongodb";
    /**
     * relaen
     */
    ETransactionSource["RELAEN"] = "relaen";
    /**
     * typeorm
     */
    ETransactionSource["TYPEORM"] = "typeorm";
})(ETransactionSource || (ETransactionSource = {}));
//# sourceMappingURL=noomitransaction.js.map