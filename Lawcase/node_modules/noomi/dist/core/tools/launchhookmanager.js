"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LaunchHookManager = void 0;
const application_1 = require("./application");
const errorfactory_1 = require("./errorfactory");
const instancefactory_1 = require("../main/instancefactory");
/**
 * 启动后执行钩子对象管理器
 * @since 0.3.5
 */
class LaunchHookManager {
    /**
     * 初始化
     * @param json [{"instance":实例名,"method":方法名,params:参数数组}...]
     */
    static init(json) {
        this.hooks = json;
    }
    /**
     * 批量执行hook方法
     */
    static async run() {
        let h;
        for (h of this.hooks) {
            await instancefactory_1.InstanceFactory.exec(h.instance, h.method, h.params);
        }
    }
    /**
     * 解析配置文件
     * @param path  launch hook配置文件路径
     */
    static parseFile(path) {
        //读取文件
        let json = null;
        try {
            let jsonStr = application_1.App.fs.readFileSync(path, 'utf-8');
            json = application_1.App.JSON.parse(jsonStr);
        }
        catch (e) {
            throw new errorfactory_1.NoomiError("2600") + '\n' + e;
        }
        this.init(json);
    }
}
exports.LaunchHookManager = LaunchHookManager;
/**
 * hook实例数组
 */
LaunchHookManager.hooks = new Array();
//# sourceMappingURL=launchhookmanager.js.map