"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NoomiError = exports.ErrorFactory = void 0;
const noomitip_1 = require("../locales/noomitip");
const util_1 = require("./util");
const application_1 = require("./application");
/**
 * 异常工厂
 * @remarks
 * 用于异常信息管理和异常信息处理
 */
class ErrorFactory {
    /**
     * 获取异常
     * @param errNo     异常码
     * @param param     参数值数组，用于处理消息带参数的情况
     * @returns         {code:异常码,message:异常信息}
     */
    static getError(errNo, param) {
        //默认为未知错误
        let errObj = noomitip_1.NoomiErrorTip[application_1.App.language];
        if (!errObj.hasOwnProperty(errNo)) {
            errNo = "0000";
        }
        let msg = errObj[errNo];
        msg = util_1.Util.compileString(msg, param);
        return {
            code: errNo,
            message: msg
        };
    }
}
exports.ErrorFactory = ErrorFactory;
/**
 * 异常信息map，键为异常码，值为异常信息
 */
ErrorFactory.errMap = new Map();
/**
 * 异常提示语言
 */
ErrorFactory.language = 'zh';
/**
 * Noomi异常类
 * @remarks
 * 用于产生异常信息
 */
class NoomiError extends Error {
    /**
     * 构造器
     * @param code      异常码
     * @param param     参数或参数数组
     */
    constructor(code, param) {
        if (param && !Array.isArray(param)) {
            param = [param];
        }
        let o = ErrorFactory.getError(code, param);
        super(o.message);
        this.code = o.code;
    }
}
exports.NoomiError = NoomiError;
//# sourceMappingURL=errorfactory.js.map